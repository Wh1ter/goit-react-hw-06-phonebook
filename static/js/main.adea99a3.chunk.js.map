{"version":3,"sources":["ContactForm/ContactForm.module.css","redux/app/app-actions.js","redux/app/app-reducer.js","redux/store.js","ContactForm/ContactForm.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","contactData","payload","id","uuid","name","number","deleteContact","filterSet","contacts","createReducer","actions","state","type","map","cur","includes","alert","types","newArrAfterDel","filter","elem","_","combineReducers","console","log","getDefaultMiddleware","middleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","app","persistReducer","appReducer","devTools","process","persistor","persistStore","ContactForm","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","className","style","contactform","onSubmit","this","pattern","title","required","onChange","Component","ContactList","deleteId","Id","del","createList","contact","data-id","onClick","defaultProps","Filter","setFilterValue","toUpperCase","setFilterToState","App","filterArr","fArr","formSubmitHandler","contactDelete","connect","dispatch","appActions","contactId","str","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.adea99a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__2ozEQ\"};","import types from \"./app-types\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst addContact = createAction(\"app/addContact\", (contactData) => {\r\n  return {\r\n    payload: {\r\n      id: uuid(),\r\n      name: contactData.name,\r\n      number: contactData.number,\r\n    },\r\n  };\r\n});\r\n\r\nconst deleteContact = createAction(\"app/deleteContact\");\r\n\r\nconst filterSet = createAction(\"app/setFilterArr\");\r\n\r\nexport default { addContact, deleteContact, filterSet };","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./app-actions\";\r\n\r\nconst initialContacts = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\n\r\nconst contacts = createReducer([...initialContacts], {\r\n  [actions.addContact]: (state, { type, payload }) => {\r\n    let nameArray = state.map((cur) => cur.name);\r\n    if (!nameArray.includes(payload.name)) {\r\n      return [...state, payload];\r\n    } else {\r\n      alert(\" No !!!\");\r\n      return state;\r\n    }\r\n  },\r\n  [actions.deleteContact]: (state, { types, payload }) => {\r\n    let newArrAfterDel = state.filter((elem) => elem.id !== payload);\r\n    return [...newArrAfterDel];\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterSet]: (_, { payload }) => {\r\n    return payload;\r\n  },\r\n});\r\n\r\nexport default combineReducers({ contacts, filter });","import {\r\n    configureStore,\r\n    getDefaultMiddleware,\r\n    combineReducers,\r\n  } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from \"redux-persist\";\r\nimport appReducer from \"./app/app-reducer\";\r\n  \r\nconsole.log(getDefaultMiddleware());\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n  \r\nconst persistConfig = {\r\n  key: \"app\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n  \r\nconst store = configureStore({\r\n  reducer: { app: persistReducer(persistConfig, appReducer) },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n  \r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import style from \"./ContactForm.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let contactForAdd = { name: this.state.name, number: this.state.number };\r\n\r\n    this.props.onSubmitData(contactForAdd);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={style.contactform}>\r\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n              value={this.state.number}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmitData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { v4 as uuid_v4 } from \"uuid\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\n\r\n\r\nclass ContactList extends Component {\r\n  deleteId = (Id) => {\r\n    this.props.del(Id);\r\n  };\r\n  createList = () => {\r\n    return this.props.contacts.map((contact) => {\r\n      return (\r\n        <li key={uuid()} id={contact.id}>\r\n          {`${contact.name}: ${contact.number}`}\r\n          <button\r\n            data-id={contact.id}\r\n            onClick={() => this.deleteId(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <ul>{this.createList()}</ul>;\r\n  }\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  del: PropTypes.func.isRequired,\r\n};\r\nContactList.defaultProps = {\r\n  contacts: [],\r\n};\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Filter extends Component {\r\n  setFilterValue = event => {\r\n    let value = event.currentTarget.value.toUpperCase();\r\n    this.props.setFilterToState(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Find contacts by name</h4>\r\n        <input onChange={this.setFilterValue}></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  setFilterToState: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import React, { Component } from \"react\";\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport appActions from \"./redux/app/app-actions\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {filterArr = (fArr) => {\n  let newArr = fArr.filter((cur) =>\n    cur.name.toUpperCase().includes(this.props.filter)\n  );\n  return newArr;\n};\n\nrender() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmitData={this.props.formSubmitHandler} />\n      <h1>Contacts</h1>\n      <Filter setFilterToState={this.props.filterSet} />\n      <ContactList\n        contacts={this.filterArr(this.props.contacts)}\n        del={this.props.contactDelete}\n      />\n    </div>\n  );\n}\n}\nconst mapStateToProps = (state) => ({\ncontacts: state.app.contacts,\nfilter: state.app.filter,\n});\nconst mapDispatchToProrps = (dispatch) => ({\nformSubmitHandler: (contactData) =>\n  dispatch(appActions.addContact(contactData)),\ncontactDelete: (contactId) => dispatch(appActions.deleteContact(contactId)),\nfilterSet: (str) => dispatch(appActions.filterSet(str)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProrps)(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}